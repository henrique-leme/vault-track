# Schema for Transaction
enum TransactionType {
  DEPOSIT
  TRANSFER
}

input CreateTransactionInput {
  sender: String!
  receiver: String!
  amount: Float!
  type: TransactionType!
  description: String
}

type CreateTransactionPayload {
  message: String
}

type Transaction {
  sender: String
  receiver: String
  amount: Float
  type: TransactionType
  description: String
}

# Connection definitions
type TransactionEdge {
  node: Transaction
  cursor: String
}

type PageInfo {
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}

type TransactionConnection {
  edges: [TransactionEdge]
  pageInfo: PageInfo
}

type Query {
  AccountTransactions(
    accountNumber: String!
    after: String
    first: Int
    before: String
    last: Int
  ): TransactionConnection
}

type Mutation {
  CreateTransaction(input: CreateTransactionInput!): CreateTransactionPayload
}

schema {
  query: Query
  mutation: Mutation
}
